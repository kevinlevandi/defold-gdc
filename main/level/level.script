ScannerEnemy 	= require("modules.enemy.scannerenemy")
BouncerEnemy	= require("modules.enemy.bouncerenemy")
Util			= require("modules.misc.util")

-- IMMUTABLES --

local difficulties = { "easy", "medium" }
local enemyTypes = { ScannerEnemy, BouncerEnemy }
local enemyTypesByDifficulty = {
	easy = { ScannerEnemy },
	medium = { ScannerEnemy, BouncerEnemy }
}
local nEnemiesByDifficulty = {
	easy = 10,
	medium = 20
}

-- LOCAL FUNCTIONS --

local function spawnEnemies(currentDifficulty)
	local ret = {}
	local availableEnemyTypes = enemyTypesByDifficulty[currentDifficulty]
	for i=1, nEnemiesByDifficulty[currentDifficulty] do
		local rndIdx = Util.getRandomInteger(#availableEnemyTypes)
		table.insert(ret, availableEnemyTypes[rndIdx])
	end
	return ret
end

local function renderEnemies()

end

local function clearTileMap(layer)
	local url = "/level#tilemap"
	local x, y, w, h = tilemap.get_bounds(url)
	for x=1, w do
		for y=1, h do
			tilemap.set_tile(url, layer, x, y, 0)
		end
	end
end

-- GLOBAL FUNCTIONS --

function init(self)
    self.currentDifficulty = difficulties[2]
	
	local enemies = spawnEnemies(self.currentDifficulty)
	for k, v in ipairs(enemies) do
		v.move()
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		print(message_id, message, sender)
	elseif message_id == hash("contact_point_response") then
		print(message_id, message, sender)
	end
end
